(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>u});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),A=t(667),c=t.n(A),l=new URL(t(483),t.b),s=i()(o()),d=c()(l);s.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  background-color: black;\n  padding-top: max(1.5%, 1rem);\n  padding-bottom: max(1.5%, 1rem);\n}\n\nh1 {\n  color: white;\n  text-align: center;\n  font-size: clamp(25px, 3rem, 5vw);\n}\n\n.content {\n  flex: 1 0 auto;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n}\n\n.input {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: min(3%, 2rem);\n  margin-top: max(4%, 2rem);\n  margin-bottom: max(4%, 2rem);\n  flex-wrap: wrap;\n}\n\nlabel {\n  font-size: clamp(25px, 1.8rem, 3vw);\n  position: relative;\n}\n\n#info {\n  position: absolute;\n  display: none;\n  font-size: clamp(10px, 1rem, 2vw);\n  background-color: rgb(238, 250, 215);\n  width: 700%;\n  left: -60%;\n  bottom: 100%;\n}\n\nlabel:hover #info {\n  display: block;\n}\n\ninput,\n#check-weather,\n#change-degrees {\n  font-size: clamp(15px, 1.3rem, 2.5vw);\n}\n\n.output {\n  flex: 1 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-bottom: max(5%, 2rem);\n}\n\n.grid-container {\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  grid-template-rows: repeat(3, fit-content);\n  width: min(90%, 800px);\n  gap: max(5%, 0.4rem);\n}\n\n.location {\n  grid-area: 1/1/2/2;\n  margin-left: max(10%, 0.4rem);\n  display: none;\n}\n\n#city-output {\n  font-weight: bold;\n}\n\n#country {\n  font-weight: bold;\n}\n\n.weather {\n  grid-area: 2/1/3/2;\n  margin-left: max(10%, 0.4rem);\n  display: none;\n}\n\n.temp {\n  grid-area: 1/2/3/3;\n  display: none;\n  flex-direction: column;\n  align-items: center;\n  margin-right: max(10%, 0.4rem);\n  justify-self: right;\n}\n\n.image {\n  grid-area: 3/1/4/3;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.main {\n  font-size: clamp(25px, 2.5rem, 4vw);\n}\n\n.additional {\n  font-size: clamp(25px, 1.8rem, 3vw);\n}\n\n#degree {\n  font-size: clamp(70px, 9rem, 8vw);\n}\n\nimg {\n  width: 100%;\n  height: auto;\n}\n\nfooter {\n  flex-shrink: 0;\n  background-color: black;\n  color: white;\n  padding: 8px;\n  font-size: clamp(15px, 1.3rem, 2.5vw);\n  text-align: center;\n}\n\nbutton {\n  cursor: url("+d+"), pointer;\n  padding: max(0.5%, 0.5rem);\n  border-radius: 20px;\n  margin-top: max(1%, 0.4rem);\n}\n\ninput,\nlabel {\n  margin-top: max(1%, 0.4rem);\n}\n\na {\n  color: white;\n}\n\na:visited {\n  color: rgb(213, 236, 255);\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,4BAA4B;EAC5B,+BAA+B;AACjC;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,iCAAiC;AACnC;;AAEA;EACE,cAAc;EACd,uBAAuB;EACvB,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,yBAAyB;EACzB,4BAA4B;EAC5B,eAAe;AACjB;;AAEA;EACE,mCAAmC;EACnC,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,iCAAiC;EACjC,oCAAoC;EACpC,WAAW;EACX,UAAU;EACV,YAAY;AACd;;AAEA;EACE,cAAc;AAChB;;AAEA;;;EAGE,qCAAqC;AACvC;;AAEA;EACE,cAAc;EACd,aAAa;EACb,uBAAuB;EACvB,uBAAuB;EACvB,4BAA4B;AAC9B;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,0CAA0C;EAC1C,sBAAsB;EACtB,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;EAClB,6BAA6B;EAC7B,aAAa;AACf;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,6BAA6B;EAC7B,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,cAAc;EACd,uBAAuB;EACvB,YAAY;EACZ,YAAY;EACZ,qCAAqC;EACrC,kBAAkB;AACpB;;AAEA;EACE,wDAA8B;EAC9B,0BAA0B;EAC1B,mBAAmB;EACnB,2BAA2B;AAC7B;;AAEA;;EAEE,2BAA2B;AAC7B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  background-color: black;\n  padding-top: max(1.5%, 1rem);\n  padding-bottom: max(1.5%, 1rem);\n}\n\nh1 {\n  color: white;\n  text-align: center;\n  font-size: clamp(25px, 3rem, 5vw);\n}\n\n.content {\n  flex: 1 0 auto;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n}\n\n.input {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: min(3%, 2rem);\n  margin-top: max(4%, 2rem);\n  margin-bottom: max(4%, 2rem);\n  flex-wrap: wrap;\n}\n\nlabel {\n  font-size: clamp(25px, 1.8rem, 3vw);\n  position: relative;\n}\n\n#info {\n  position: absolute;\n  display: none;\n  font-size: clamp(10px, 1rem, 2vw);\n  background-color: rgb(238, 250, 215);\n  width: 700%;\n  left: -60%;\n  bottom: 100%;\n}\n\nlabel:hover #info {\n  display: block;\n}\n\ninput,\n#check-weather,\n#change-degrees {\n  font-size: clamp(15px, 1.3rem, 2.5vw);\n}\n\n.output {\n  flex: 1 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-bottom: max(5%, 2rem);\n}\n\n.grid-container {\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  grid-template-rows: repeat(3, fit-content);\n  width: min(90%, 800px);\n  gap: max(5%, 0.4rem);\n}\n\n.location {\n  grid-area: 1/1/2/2;\n  margin-left: max(10%, 0.4rem);\n  display: none;\n}\n\n#city-output {\n  font-weight: bold;\n}\n\n#country {\n  font-weight: bold;\n}\n\n.weather {\n  grid-area: 2/1/3/2;\n  margin-left: max(10%, 0.4rem);\n  display: none;\n}\n\n.temp {\n  grid-area: 1/2/3/3;\n  display: none;\n  flex-direction: column;\n  align-items: center;\n  margin-right: max(10%, 0.4rem);\n  justify-self: right;\n}\n\n.image {\n  grid-area: 3/1/4/3;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.main {\n  font-size: clamp(25px, 2.5rem, 4vw);\n}\n\n.additional {\n  font-size: clamp(25px, 1.8rem, 3vw);\n}\n\n#degree {\n  font-size: clamp(70px, 9rem, 8vw);\n}\n\nimg {\n  width: 100%;\n  height: auto;\n}\n\nfooter {\n  flex-shrink: 0;\n  background-color: black;\n  color: white;\n  padding: 8px;\n  font-size: clamp(15px, 1.3rem, 2.5vw);\n  text-align: center;\n}\n\nbutton {\n  cursor: url(wand.png), pointer;\n  padding: max(0.5%, 0.5rem);\n  border-radius: 20px;\n  margin-top: max(1%, 0.4rem);\n}\n\ninput,\nlabel {\n  margin-top: max(1%, 0.4rem);\n}\n\na {\n  color: white;\n}\n\na:visited {\n  color: rgb(213, 236, 255);\n}\n"],sourceRoot:""}]);const u=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var l=0;l<n.length;l++){var s=[].concat(n[l]);r&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],l=r.base?c[0]+r.base:c[0],s=a[l]||0,d="".concat(l," ").concat(s);a[l]=s+1;var u=t(d),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var p=o(m,r);r.byIndex=A,e.splice(A,0,{identifier:d,updater:p,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=r(n,o),l=0;l<a.length;l++){var s=t(a[l]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},483:(n,e,t)=>{n.exports=t.p+"675e480372c004d0438b.png"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),c=t.n(A),l=t(216),s=t.n(l),d=t(589),u=t.n(d),m=t(426),p={};p.styleTagTransform=u(),p.setAttributes=c(),p.insert=i().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=s(),e()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;const C=document.querySelector("header"),f=document.querySelector("input"),g=document.querySelector("img"),E=document.querySelector(".location"),y=document.querySelector(".weather"),B=document.querySelector(".temp"),h=document.getElementById("city-output"),x=document.getElementById("country"),b=document.getElementById("weather"),v=document.getElementById("description"),w=document.getElementById("wind-speed"),k=document.getElementById("degree"),S=document.getElementById("feels"),I=document.getElementById("change-degrees");function z(n){!function(n){"Error: City not found"==n?(E.style.display="block",y.style.display="none",B.style.display="none",f.value=""):(E.style.display="block",y.style.display="block",B.style.display="flex",I.textContent="Change to Fahrenheit",f.value="")}(n),function(n){"Error: City not found"==n?C.style.backgroundColor="black":n.temperature>=30?C.style.backgroundColor="rgb(247, 59, 59)":n.temperature>=20&&n.temperature<30?C.style.backgroundColor="rgb(252, 200, 96)":n.temperature>=10&&n.temperature<20?C.style.backgroundColor="rgb(114, 251, 118)":n.temperature>=0&&n.temperature<10?C.style.backgroundColor="rgb(135, 209, 255)":n.temperature>=-10&&n.temperature<0?C.style.backgroundColor="rgb(74, 52, 116)":n.temperature>=-20&&n.temperature<-10?C.style.backgroundColor="rgb(40, 43, 102)":n.temperature<-20&&(C.style.backgroundColor="rgb(73, 73, 80)")}(n),function(n){"Error: City not found"==n?(h.textContent="Sorry!",x.textContent="Couldn't find the city :("):(h.textContent="",x.textContent="",b.textContent="",v.textContent="",w.textContent="",k.textContent="",S.textContent="",h.textContent=n.city,x.textContent=n.country,b.textContent=n.type,v.textContent=n.description,w.textContent=`Wind speed: ${Math.round(10*n.windSpeed)/10} m/s`,k.textContent=`${Math.round(n.temperature)} °C`,S.textContent=`Feels like ${Math.round(n.feels)} °C`)}(n),function(n){"Error: City not found"==n?g.src="find.gif":"Clear"==n.type?g.src="sun.jpg":"Clouds"==n.type?g.src="clouds.gif":"Rain"==n.type?g.src="rain.gif":"Snow"==n.type?g.src="snow.webp":"Thunderstorm"==n.type?g.src="thunderstorm.gif":"Fog"==n.type?g.src="fog.gif":"Squall"==n.type?g.src="squall.gif":"Mist"==n.type?g.src="mist3.webp":"Ash"==n.type?g.src="ash.gif":"Drizzle"==n.type?g.src="drizzle.gif":"Haze"==n.type||"Smoke"==n.type?g.src="haze.gif":"Sand"==n.type||"Dust"==n.type?g.src="sand.gif":"Tornado"==n.type?g.src="tornado.gif":g.src="start.gif"}(n)}const j=document.getElementById("check-weather"),M=document.querySelector("input"),q=document.getElementById("change-degrees");function T(n){if("Error: City not found"==n)return n;{const e={city:n.name,country:n.sys.country,temperature:n.main.temp,feels:n.main.feels_like,type:n.weather[0].main,description:n.weather[0].description,windSpeed:n.wind.speed};return console.log(e),e}}let Y,F;j.addEventListener("click",(()=>{(async function(n){try{const e=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&APPID=6d2a4c9d8f88615cd21fa5a3e391da34&units=metric`,{mode:"cors"});if(!e.ok)throw new Error("City not found");const t=await e.json();return console.log(e,t),t}catch(n){return n}})(M.value).then(T).then(z)})),q.addEventListener("click",(()=>{!function(){if("Change to Fahrenheit"==q.textContent){const n=Number(document.getElementById("degree").textContent.slice(0,-3));Y=n;const e=Number(document.getElementById("feels").textContent.slice(0,-3).slice(11));F=e;const t=Math.round(9*n/5+32),r=Math.round(9*e/5+32);document.getElementById("degree").textContent=`${t} °F`,document.getElementById("feels").textContent=`Feels like ${r} °F`,q.textContent="Change to Celsius"}else document.getElementById("degree").textContent=`${Y} °C`,document.getElementById("feels").textContent=`Feels like ${F} °C`,q.textContent="Change to Fahrenheit"}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,